// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sever.Models;

#nullable disable

namespace Sever.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240626170618_addSampleData")]
    partial class addSampleData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Sever.Models.Actor", b =>
                {
                    b.Property<int>("ActorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActorId"), 1L, 1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActorId");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            ActorId = 1,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7211),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7212),
                            DoB = new DateTime(1965, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Robert Downey Jr.",
                            Nationality = "American"
                        },
                        new
                        {
                            ActorId = 2,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7217),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7218),
                            DoB = new DateTime(1984, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Scarlett Johansson",
                            Nationality = "American"
                        },
                        new
                        {
                            ActorId = 3,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7219),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7219),
                            DoB = new DateTime(1974, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Leonardo DiCaprio",
                            Nationality = "American"
                        },
                        new
                        {
                            ActorId = 4,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7220),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7220),
                            DoB = new DateTime(1990, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jennifer Lawrence",
                            Nationality = "American"
                        },
                        new
                        {
                            ActorId = 5,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7221),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7221),
                            DoB = new DateTime(1954, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Denzel Washington",
                            Nationality = "American"
                        },
                        new
                        {
                            ActorId = 6,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7222),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7222),
                            DoB = new DateTime(1981, 6, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Natalie Portman",
                            Nationality = "Israeli-American"
                        },
                        new
                        {
                            ActorId = 7,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7223),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7223),
                            DoB = new DateTime(1956, 7, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tom Hanks",
                            Nationality = "American"
                        },
                        new
                        {
                            ActorId = 8,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7224),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7224),
                            DoB = new DateTime(1990, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Emma Watson",
                            Nationality = "British"
                        },
                        new
                        {
                            ActorId = 9,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7226),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7226),
                            DoB = new DateTime(1963, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Brad Pitt",
                            Nationality = "American"
                        },
                        new
                        {
                            ActorId = 10,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7227),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7227),
                            DoB = new DateTime(1985, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gal Gadot",
                            Nationality = "Israeli"
                        });
                });

            modelBuilder.Entity("Sever.Models.Director", b =>
                {
                    b.Property<int>("DirectorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DirectorId"), 1L, 1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DirectorId");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            DirectorId = 1,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7257),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7257),
                            DoB = new DateTime(1946, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Steven Spielberg",
                            Nationality = "American"
                        },
                        new
                        {
                            DirectorId = 2,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7259),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7259),
                            DoB = new DateTime(1970, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Christopher Nolan",
                            Nationality = "British"
                        },
                        new
                        {
                            DirectorId = 3,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7260),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7261),
                            DoB = new DateTime(1942, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Martin Scorsese",
                            Nationality = "American"
                        },
                        new
                        {
                            DirectorId = 4,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7282),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7294),
                            DoB = new DateTime(1963, 3, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Quentin Tarantino",
                            Nationality = "American"
                        },
                        new
                        {
                            DirectorId = 5,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7306),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7306),
                            DoB = new DateTime(1954, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "James Cameron",
                            Nationality = "Canadian"
                        },
                        new
                        {
                            DirectorId = 6,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7307),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7307),
                            DoB = new DateTime(1951, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kathryn Bigelow",
                            Nationality = "American"
                        },
                        new
                        {
                            DirectorId = 7,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7308),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7308),
                            DoB = new DateTime(1937, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ridley Scott",
                            Nationality = "British"
                        },
                        new
                        {
                            DirectorId = 8,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7309),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7309),
                            DoB = new DateTime(1961, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Peter Jackson",
                            Nationality = "New Zealander"
                        },
                        new
                        {
                            DirectorId = 9,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7310),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7310),
                            DoB = new DateTime(1964, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Guillermo del Toro",
                            Nationality = "Mexican"
                        },
                        new
                        {
                            DirectorId = 10,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7311),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7311),
                            DoB = new DateTime(1983, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Greta Gerwig",
                            Nationality = "American"
                        });
                });

            modelBuilder.Entity("Sever.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"), 1L, 1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7328),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7329),
                            Name = "Action"
                        },
                        new
                        {
                            GenreId = 2,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7330),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7330),
                            Name = "Comedy"
                        },
                        new
                        {
                            GenreId = 3,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7331),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7331),
                            Name = "Drama"
                        },
                        new
                        {
                            GenreId = 4,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7332),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7332),
                            Name = "Horror"
                        },
                        new
                        {
                            GenreId = 5,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7332),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7333),
                            Name = "Science-Fiction"
                        },
                        new
                        {
                            GenreId = 6,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7333),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7334),
                            Name = "Romance"
                        },
                        new
                        {
                            GenreId = 7,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7334),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7335),
                            Name = "Thriller"
                        },
                        new
                        {
                            GenreId = 8,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7335),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7335),
                            Name = "Fantasy"
                        },
                        new
                        {
                            GenreId = 9,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7336),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7336),
                            Name = "Animation"
                        },
                        new
                        {
                            GenreId = 10,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7337),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7337),
                            Name = "Documentary"
                        });
                });

            modelBuilder.Entity("Sever.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieId"), 1L, 1);

                    b.Property<string>("BannerImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DirectorId")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("MovieUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("National")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfView")
                        .HasColumnType("int");

                    b.Property<string>("PosterImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MovieId");

                    b.HasIndex("DirectorId");

                    b.HasIndex("GenreId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("Sever.Models.MovieActor", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.Property<string>("CharacterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.HasKey("MovieId", "ActorId");

                    b.HasIndex("ActorId");

                    b.ToTable("MovieActors");
                });

            modelBuilder.Entity("Sever.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            Name = "Member"
                        },
                        new
                        {
                            RoleId = 5,
                            Name = "Guest"
                        });
                });

            modelBuilder.Entity("Sever.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            DateCreated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7135),
                            DateUpdated = new DateTime(2024, 6, 27, 0, 6, 17, 890, DateTimeKind.Local).AddTicks(7146),
                            Email = "admin@gmail.com",
                            FirstName = "Admin",
                            LastName = "First",
                            Password = "AQAAAAEAACcQAAAAEAvp6On5wZGXpk//ZUI74iSE11QbTsY9Y0NveGJPVP7+AzOmiausxSFHzTF/+cWoeA==",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Sever.Models.WatchList", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.HasKey("MovieId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("WatchLists");
                });

            modelBuilder.Entity("Sever.Models.Movie", b =>
                {
                    b.HasOne("Sever.Models.Director", "Director")
                        .WithMany("Movies")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sever.Models.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Director");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Sever.Models.MovieActor", b =>
                {
                    b.HasOne("Sever.Models.Actor", "Actor")
                        .WithMany("MovieActors")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sever.Models.Movie", "Movie")
                        .WithMany("MovieActors")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Sever.Models.User", b =>
                {
                    b.HasOne("Sever.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Sever.Models.WatchList", b =>
                {
                    b.HasOne("Sever.Models.Movie", "Movie")
                        .WithMany("WatchLists")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sever.Models.User", "User")
                        .WithMany("WatchLists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Sever.Models.Actor", b =>
                {
                    b.Navigation("MovieActors");
                });

            modelBuilder.Entity("Sever.Models.Director", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("Sever.Models.Genre", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("Sever.Models.Movie", b =>
                {
                    b.Navigation("MovieActors");

                    b.Navigation("WatchLists");
                });

            modelBuilder.Entity("Sever.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Sever.Models.User", b =>
                {
                    b.Navigation("WatchLists");
                });
#pragma warning restore 612, 618
        }
    }
}
